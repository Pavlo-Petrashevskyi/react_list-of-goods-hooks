{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isReversed","setIsReversed","sortedBy","setSortedBy","isVisible","setIsVisible","newGoods","array","visibleGoods","sort","good1","good2","localeCompare","length","reverse","changeArray","className","type","onClick","e","currentTarget","classList","remove","document","querySelector","add","Array","from","querySelectorAll","forEach","buttom","map","good","ReactDOM","render","getElementById"],"mappings":"uOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,QAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAgCMC,EA9Bc,SAACC,GACnB,IAAMC,EAAY,YAAOD,GAEzB,OAAQL,GACN,IAAK,OAeL,QACE,MAbF,IAAK,WACHM,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAME,cAAcD,MAE7B,MAEF,IAAK,SACHH,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAMG,OAASF,EAAME,UAYlC,OAJIb,GACFQ,EAAaM,UAGRN,EAGQO,CAAYlB,GAE7B,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,QAAS,SAACC,GAAO,IAAD,EAKd,OAJAhB,EAAY,YACZE,GAAa,GACbc,EAAEC,cAAcC,UAAUC,OAAO,YAEjC,UAAOC,SACJC,cAAc,sBADjB,aAAO,EAC0BH,UAAUI,IAAI,aATnD,iCAeA,wBACER,KAAK,SACLD,UAAU,6BACVE,QAAS,SAACC,GAAO,IAAD,EAKd,OAJAhB,EAAY,UACZE,GAAa,GACbc,EAAEC,cAAcC,UAAUC,OAAO,YAEjC,UAAOC,SACJC,cAAc,mBADjB,aAAO,EACuBH,UAAUI,IAAI,aAThD,4BAeA,wBACER,KAAK,SACLD,UAAU,6BACVE,QAAS,SAACC,GAWR,OAVAlB,GAAeD,GAEXA,GAAc0B,MAAMC,KACtBJ,SAASK,iBAAiB,aAC1Bf,OAAS,EACTR,GAAa,GAEbA,GAAa,GAGRL,EACHmB,EAAEC,cAAcC,UAAUI,IAAI,YAC9BN,EAAEC,cAAcC,UAAUC,OAAO,aAhBzC,qBAsBClB,GACC,wBACEa,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPb,GAAa,GACbF,EAAY,QACZF,GAAc,GAEdyB,MAAMC,KAAKJ,SAASK,iBAAiB,WAClCC,SAAQ,SAAAC,GAAM,OAAIA,EAAOT,UAAUI,IAAI,gBAT9C,sBAiBJ,6BACE,6BACGnB,EAASyB,KAAI,SAAAC,GAAI,OAChB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cC/HpCC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.c28e6828.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortedBy, setSortedBy] = useState('none');\n  const [isVisible, setIsVisible] = useState(false);\n\n  const changeArray = (array: string[]) => {\n    const visibleGoods = [...array];\n\n    switch (sortedBy) {\n      case 'none':\n        break;\n\n      case 'alphabet':\n        visibleGoods.sort((good1, good2) => {\n          return good1.localeCompare(good2);\n        });\n        break;\n\n      case 'length':\n        visibleGoods.sort((good1, good2) => {\n          return good1.length - good2.length;\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  const newGoods = changeArray(goodsFromServer);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className=\"button is-info is-light\"\n          onClick={(e) => {\n            setSortedBy('alphabet');\n            setIsVisible(true);\n            e.currentTarget.classList.remove('is-light');\n\n            return document\n              .querySelector('.is-success')?.classList.add('is-light');\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-success is-light\"\n          onClick={(e) => {\n            setSortedBy('length');\n            setIsVisible(true);\n            e.currentTarget.classList.remove('is-light');\n\n            return document\n              .querySelector('.is-info')?.classList.add('is-light');\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-warning is-light\"\n          onClick={(e) => {\n            setIsReversed(!isReversed);\n\n            if (isReversed && Array.from(\n              document.querySelectorAll('is-light'),\n            ).length < 1) {\n              setIsVisible(false);\n            } else {\n              setIsVisible(true);\n            }\n\n            return isReversed\n              ? e.currentTarget.classList.add('is-light')\n              : e.currentTarget.classList.remove('is-light');\n          }}\n        >\n          Reverse\n        </button>\n\n        {isVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsVisible(false);\n              setSortedBy('none');\n              setIsReversed(false);\n\n              Array.from(document.querySelectorAll('button'))\n                .forEach(buttom => buttom.classList.add('is-light'));\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {newGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}