{"version":3,"sources":["App.tsx","index.tsx"],"names":["Sort","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortedBy","setSortedBy","isVisible","setIsVisible","sentDataFromButtons","sortBy","visible","reversed","newGoods","array","visibleGoods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","changeArray","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAAKM,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KAEMC,EAAsB,WAItB,IAHJC,EAGG,uDAHMZ,EAAKM,KACdO,EAEG,wDADHC,EACG,wDACHN,EAAYI,GACZF,EAAaG,GACbR,EAAcS,IA+BVC,EA5Bc,SAACC,GACnB,IAAMC,EAAY,YAAOD,GAEzB,OAAQT,GACN,KAAKP,EAAKkB,SACRD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAME,cAAcD,MAE7B,MAEF,KAAKrB,EAAKuB,OACRN,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAMI,OAASH,EAAMG,UAIhC,KAAKxB,EAAKM,MASZ,OAJIF,GACFa,EAAaQ,UAGRR,EAGQS,CAAYzB,GAE7B,OACE,sBAAK0B,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYtB,IAAaP,EAAKkB,WAEhCY,QAAS,kBAAMnB,EAAoBX,EAAKkB,UAAU,IALpD,iCAUA,wBACEU,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYtB,IAAaP,EAAKuB,SAEhCO,QAAS,kBAAMnB,EAAoBX,EAAKuB,QAAQ,IALlD,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAAazB,IAEf0B,QAAS,kBAAMnB,EAAoBJ,IAC/BH,GAAcG,IAAaP,EAAKM,OACjCF,IAPL,qBAYCK,GACC,wBACEmB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAMnB,KAHjB,sBAUJ,6BACE,6BACGI,EAASgB,KAAI,SAAAC,GAAI,OAChB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCnHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d7f908ec.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum Sort {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortedBy, setSortedBy] = useState(Sort.NONE);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const sentDataFromButtons = (\n    sortBy = Sort.NONE,\n    visible = false,\n    reversed = false,\n  ) => {\n    setSortedBy(sortBy);\n    setIsVisible(visible);\n    setIsReversed(reversed);\n  };\n\n  const changeArray = (array: string[]) => {\n    const visibleGoods = [...array];\n\n    switch (sortedBy) {\n      case Sort.ALPHABET:\n        visibleGoods.sort((good1, good2) => {\n          return good1.localeCompare(good2);\n        });\n        break;\n\n      case Sort.LENGTH:\n        visibleGoods.sort((good1, good2) => {\n          return good1.length - good2.length;\n        });\n        break;\n\n      case Sort.NONE:\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  const newGoods = changeArray(goodsFromServer);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info', {\n            'is-light': sortedBy !== Sort.ALPHABET,\n          })}\n          onClick={() => sentDataFromButtons(Sort.ALPHABET, true)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': sortedBy !== Sort.LENGTH,\n          })}\n          onClick={() => sentDataFromButtons(Sort.LENGTH, true)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => sentDataFromButtons(sortedBy,\n            !(isReversed && sortedBy === Sort.NONE),\n            !isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => sentDataFromButtons()}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {newGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}